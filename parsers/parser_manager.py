import os
from parsers.txt_parser import parse_txt
from parsers.pdf_parser import parse_pdf
from parsers.docx_parser import parse_docx
from parsers.doc_parser import parse_doc       # –∏–º–ø–æ—Ä—Ç –¥–ª—è .doc
from parsers.epub_fb2_parser import parse_epub_fb2
from parsers.rtf_parser import parse_rtf

class ParserManager:
    def parse(self, file_path):
        ext = os.path.splitext(file_path)[1].lower()
        text = ""

        try:
            if ext == ".txt":
                text = parse_txt(file_path)
            elif ext == ".pdf":
                text = parse_pdf(file_path)
            elif ext == ".docx":
                text = parse_docx(file_path)
            elif ext == ".doc":
                text = parse_doc(file_path)
            elif ext in [".fb2", ".epub"]:
                text = parse_epub_fb2(file_path)
            elif ext == ".rtf":
                text = parse_rtf(file_path)
            else:
                print(f"[ParserManager] ‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: {file_path} (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: {ext})")
                return ""

            if text:
                print(f"[ParserManager] ‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω. –§–∞–π–ª —É–¥–∞–ª—ë–Ω: {file_path}")
            else:
                print(f"[ParserManager] ‚ö†Ô∏è –ü–∞—Ä—Å–∏–Ω–≥ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞. –§–∞–π–ª —É–¥–∞–ª—ë–Ω: {file_path}")

            return text

        except Exception as e:
            print(f"[ParserManager] üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ {file_path}: {e}")
            return ""

        finally:
            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if os.path.exists(file_path):
                try:
                    os.remove(file_path)
                except Exception as delete_error:
                    print(f"[ParserManager] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {delete_error}")
